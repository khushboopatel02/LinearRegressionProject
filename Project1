import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression 

class main:
    url=input("Enter the Dataset file URL: ")
    df=pd.read_csv(url)
    print(df.head())
    print(df.dtypes)  #to know whether the variable is continuous or categorical
    #Bivariate Analysis
    #Analysis the relation netween two variable using bivariate analysis. Checking if there is any null value exist.
    nullval=df['Hours'].isnull().sum()
    if nullval == 0:
        print("No null value")
    else:
        print("Delete or immute null value")
    
    plt.scatter(df['Hours'], df['Scores'])  #plotting the data using scatter graph
    plt.show()
    #Model Building
    ##Build our model based on given data
    X=df.drop("Scores",axis=1)
    Y=df['Scores']
    X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.2, random_state=0) 
    lreg = LinearRegression()  
    lreg.fit(X_train, Y_train)
    print("Model has been prepared! Now time to make predctions.")

    #plotting the regression line
    line=lreg.coef_*X+lreg.intercept_

    # Plotting for the test data
    plt.scatter(X, Y)
    plt.plot(X, line);
    plt.show()
    print(X_test) # Testing data - In Hours
    Y_pred = lreg.predict(X_test) # Predicting the scores

    # Comparing Actual vs Predicted
    df = pd.DataFrame({'Actual': Y_test, 'Predicted': Y_pred})  
    print(df)

    rawinput=input("Enter hours to calculate its score")
    userinput = float(rawinput)
    hours = np.array([userinput]).reshape((-1, 1))
    own_pred = lreg.predict(hours)
    print("No of Hours = {}".format(hours))
    print("Predicted Score = {}".format(own_pred[0]))

if __name__ == "__main__":
    main()
