import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from matplotlib.legend import Legend

class main:
    try:
        df=pd.read_csv('Iris.csv')
        print(df.head())
        print(df.dtypes)
        ifnullval=pd.isnull(df).sum()
        print("Checking any null value......",ifnullval)
        print(df.describe())
        print(df.shape)
        x = df.iloc[:, [0, 1, 2, 3]].values
        wcss = []
        for i in range(1, 11):
            kmeans = KMeans(n_clusters = i, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)
            kmeans.fit(x)
            print(kmeans.inertia_)
            wcss.append(kmeans.inertia_) #To identify the distance between the centroid
            print(i)
        plt.plot(range(1,11), wcss)
        plt.title('The elbow method')
        plt.xlabel('Number of clusters')
        plt.ylabel('WCSS') # Within cluster sum of squares
        plt.show()
        print("we can see there are total three clusters present from the graph")
        kmean = KMeans(n_clusters = 3, init = 'k-means++',max_iter = 300, n_init = 10, random_state = 0)
        y_kmeans = kmean.fit_predict(x)
        
        plt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], s = 100, c = 'orange', label = 'Iris-setosa')
        plt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], s = 100, c = 'white', label = 'Iris-versicolour')
        plt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1],s = 100, c = 'green', label = 'Iris-virginica')
        plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], s = 100, c = 'pink', label = 'Centroids')
        plt.legend(scatterpoints=1, frameon=True, labelspacing=1, title='Cluter Plotting')
        plt.show()
        

        
    except  FileNotFoundError: 
        print("File not found!")

if __name__=='__main__':
    main()
    
